summary(trials2$RT)
lmer1<-lmer(RT~(1|ID), data=trials2)
summary(lmer1)
lmer1<-lmer(RT~(1|ID)+(1|item_id), data=trials2)
summary(lmer1)
lmer1<-lmer(RT~X_i+(1|ID)+(1|item_id), data=trials2)
summary(lmer1)
lmer1<-lmer(RT~category+(1|ID)+(1|item_id), data=trials2)
summary(lmer1)
lmer2<-lmer(RT~category+P3+(1|ID)+(1|item_id), data=trials2)
lmer2<-lmer(RT~category+P2+(1|ID)+(1|item_id), data=trials2)
summary(lmer2)
lmer3<-lmer(RT~category+P2+Dependent+(1|ID)+(1|item_id), data=trials2)
summary(lmer2)
summary(lmer3)
trials2$V4=rnorm(3500, 20, 4)
trials2$RT=alpha+trials2$T_0s+trials2$O_0i+(beta_1+trials2$T_1s)*trials2$X_i-30*trials2$P2+15*trials2$Dependent+10*trials2$V4+rnorm(3500,0,sigma)
summary(trials2$RT)
alpha<-900
trials2$RT=alpha+trials2$T_0s+trials2$O_0i+(beta_1+trials2$T_1s)*trials2$X_i-30*trials2$P2+15*trials2$Dependent+10*trials2$V4+rnorm(3500,0,sigma)
summary(trials2$RT)
trials2$RT=1000+trials2$T_0s+trials2$O_0i+(beta_1+trials2$T_1s)*trials2$X_i-30*trials2$P2+15*trials2$Dependent+10*trials2$V4+rnorm(3500,0,sigma)
summary(trials2$RT)
plot(density(trials2$RT))
lmer1<-lmer(RT~(1|ID), data=trials2)
summary(lmer1)
trials2$RT=alpha+trials2$T_0s+trials2$O_0i+(beta_1+trials2$T_1s)*trials2$X_i-10*trials2$P2+20*trials2$Dependent+10*trials2$V4+rnorm(3500,0,sigma)
summary(lmer1)
summary(trials2$RT)
lmer1<-lmer(RT~(1|ID), data=trials2)
summary(lmer1)
lmer1<-lmer(RT~(1|ID)+(1|item_id), data=trials2)
summary(lmer1)
lmer3<-lmer(RT~category+(1|ID)+(1|item_id), data=trials2)
summary(lmer3)
lmer3<-lmer(RT~category+(1|ID)+(1|item_id), data=trials2)
lmer4<-lmer(RT~category+P2+(1|ID)+(1|item_id), data=trials2)
summary(lmer4)
lmer5<-lmer(RT~category+P2+Dependent+(1|ID)+(1|item_id), data=trials2)
summary(lmer5)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1|ID)+(1|item_id), data=trials2)
summary(lmer6)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+category|ID)+(1|item_id), data=trials2)
summary(lmer6)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+category|ID)+(1+category|item_id), data=trials2)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+category|ID)+(1|item_id), data=trials2)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+Dependent+category|ID)+(1|item_id), data=trials2)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+category|ID)+(0+Dependent|ID)+(1|item_id), data=trials2)
plot(lmer6)
trials2$RT=exp(alpha+trials2$T_0s+trials2$O_0i+(beta_1+trials2$T_1s)*trials2$X_i-10*trials2$P2+20*trials2$Dependent+10*trials2$V4)+rnorm(3500,0,sigma)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+category|ID)+(0+Dependent|ID)+(1|item_id), data=trials2)
lmer6<-lmer(RT~category+P2+Dependent+V4+(1+category|ID)+(1|item_id), data=trials2)
3*27.03
3*27.03+20*27.71
3*27.03+19*27.71
3*27.03+7*27.71
12*27.71
333+276
rm(list=ls())
require(bayestestR)
require(faux)
require(lavaan)
set.seed(787878)
dat1<-simulate_simpson(n=400, groups=2, r=0.4, difference = 2)
dat1$Group2=rbinom(800,1,0.5)
dat1$V3=rnorm(800,20,5)
dat1$Dependent=dat1$V2-2*dat1$Group2*(-0.2)*dat1$V3 + rnorm(800,0,3)
dat1=dat1[,-1]
summary(dat1$Dependent)
summary(dat1$V2)
plot(dat1$V2, dat1$Dependent)
lm1<-lm(Dependent~V2, data=dat1)
summary(lm1)
lm1<-lm(Dependent~V2+Group2, data=dat1)
summary(lm1)
lm1<-lm(Dependent~V2+Group, data=dat1)
summary(lm1)
set.seed(787878)
dat1<-simulate_simpson(n=400, groups=2, r=0.4, difference = 2)
dat1$Group2=rbinom(800,1,0.5)
dat1$V3=rnorm(800,20,5)
dat1$Dependent=dat1$V2-2*dat1$Group2*(-0.2)*dat1$V3 + rnorm(800,0,3)
dat1=dat1[,-2]
lm1<-lm(Dependent~V1, data=dat1)
summary(lm1)
plot(dat1$V1, dat1$Dependent)
summary(dat1$V3)
dat1$Group3=rbinom(800,1,0.5)
dat1$Group4=ifelse(dat1$Group2==0 & dat1$Group3==0,0,ifelse(dat1$Group2==1 & dat1$Group3==1,1,2))
table(dat1$Group4)
dat1$Group4=ifelse(dat1$Group2==0 & dat1$Group3==0,0,ifelse(dat1$Group2==1 & dat1$Group3==1,1,ifelse(dat1$Group2==0 & dat1$Group3==1,2,3)))
table(dat1$Group4)
dat1$Dependent=dat1$V2-2*dat1$Group4*(-0.2)*dat1$V3 + rnorm(800,0,3)
dat1$Dependent=dat1$V2-2*dat1$Group4+(-0.2)*dat1$V3 + rnorm(800,0,3)
-2*dat1$Group4[1]
-2*dat1$Group4[2]
-2*dat1$Group4[3]
-2*dat1$Group4[4]
-2*dat1$Group4[5]
set.seed(787878)
dat1<-simulate_simpson(n=400, groups=2, r=0.4, difference = 2)
dat1$Group2=rbinom(800,1,0.5)
dat1$Group3=rbinom(800,1,0.5)
dat1$Group4=ifelse(dat1$Group2==0 & dat1$Group3==0,0,ifelse(dat1$Group2==1 & dat1$Group3==1,1,ifelse(dat1$Group2==0 & dat1$Group3==1,2,3)))
dat1$V3=rnorm(800,20,5)
dat1$Dependent=dat1$V2-2*dat1$Group4+(-0.2)*dat1$V3 + rnorm(800,0,3)
summary(dat1$Dependent)
dat1$Dependent=dat1$V2+2*dat1$Group4+(-0.2)*dat1$V3 + rnorm(800,0,3)
summary(dat1$Dependent)
plot(dat1$Dependent)
plot(density(dat1$Dependent))
dat1=dat1[,c(-2,4,5)]
dat1=dat1[,-c(2,4,5)]
names(dat1)=c('ScreenTime','Sex','SES','Extraversion','Interest')
lm1<-lm(Interest~ScreenTime, data=dat1)
summary(lm1)
lm2<-lm(Interest~ScreenTime+SES, data=dat1)
summary(lm2)
dat1$SES=as.factor(dat1$SES)
lm2<-lm(Interest~ScreenTime+SES, data=dat1)
summary(lm2)
lm3<-lm(Interest~ScreenTime+SES+Sex, data=dat1)
summary(lm3)
lm4<-lm(Interest~ScreenTime+SES+Sex+Extraversion, data=dat1)
summary(lm4)
dat1$Sex=as.factors(dat1$Sex)
dat1$Sex=as.factor(dat1$Sex)
levels(dat1$Sex)
levels(dat1$Sex)=c(0,1)
lm4<-lm(Interest~ScreenTime+SES+Sex+Extraversion, data=dat1)
summary(lm4)
5500 + 11300 + 13000
5500 + 11300 + 13000
0.6*8000
16431/21
require(faux)
set.seed(456)
cmat <- c(1, .4,.4, .1, .1, .1,
.4, 1,.3, .1, .1, .1,
.4,.2, 1, .1, .1, .1,
.1,.1,.1,  1, .4, .4,
.1,.1,.1, .4,  1, .2,
.1,.1,.1, .4, .2,  1)
require(faux)
set.seed(456)
cmat <- c(1,0.5,.6
0.5,1,.6
.6,.6,1)
require(faux)
set.seed(456)
cmat <- c(1,0.5,.6,
0.5,1,.6,
.6,.6,1)
vars<-rnorm_multi(n=100, 6,30,5,cmat)
require(faux)
set.seed(456)
cmat <- c(1,0.5,.6,.3,
0.5,1,.6,.15,
.6,.6,1,.2
.3,.15,.2,1)
require(faux)
set.seed(456)
cmat <- c(1,0.5,.6,.3,
0.5,1,.6,.15,
.6,.6,1,.2,
.3,.15,.2,1)
vars<-rnorm_multi(n=100, 4,30,5,cmat)
cor(vars)
mean(0.3315924,0.1699528,0.1847321 )
(0.3315924+0.1699528+0.1847321 )/3
cmat=as.data.frame(cmat)
vars$sum=vars$X1+vars$X2+vars$X3
cor(vars)
require(faux)
set.seed(456)
cmat <- c(1,0,0,.3,
0,1,0,.15,
0,0,1,.2,
0,0,0,1)
vars<-rnorm_multi(n=100, 4,30,5,cmat)
cor(vars)
vars$sum=vars$X1+vars$X2+vars$X3
cor(vars)
dim(vars)
install.packages("RSelenium")
install.packages("rvest")
install.packages("tidyverse")
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
require(RSelenium)
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
rD <- rsDriver(browser="chrome", port=4545L, verbose=F)
require(RSelenium)
rD <- rsDriver(browser="chrome", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$navigate("https://www.fcc.gov/media/engineering/dtvmaps")
rD <- rsDriver(browser="chrome", port=4545L, verbose=F)
rD <- rsDriver(browser="chrome", port=4546L, verbose=F)
require(RSelenium)
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$navigate("https://www.fcc.gov/media/engineering/dtvmaps")
remDr$navigate("https://www.google.com/search?q=So%2CW+chess&rlz=1C1ONGR_en-GBGB963GB963&sxsrf=ALiCzsbo8v2GfcBhCjDJEicxktdlDAdOEw%3A1653513408878&ei=wJyOYuecNbHD8gLQ77D4Cw&ved=0ahUKEwjn_Pe6yfv3AhWxoVwKHdA3DL8Q4dUDCA4&uact=5&oq=So%2CW+chess&gs_lcp=Cgdnd3Mtd2l6EAMyBwgjECcQiwMyCQgAEB4QFhCLAzoECAAQRzoNCC4QsQMQ1AIQChCLAzoNCC4QsQMQgwEQChCLAzoNCAAQsQMQgwEQChCLAzoKCAAQsQMQChCLAzoQCC4QsQMQxwEQrwEQChCLAzoHCAAQChCLAzoICAAQgAQQiwM6CwgAEB4QFhAKEIsDSgQIQRgASgQIRhgAUMcBWKcLYLcMaABwAngBgAG7A4gB3AmSAQkyLjEuMi4wLjGYAQCgAQHIAQO4AQPAAQE&sclient=gws-wiz")
age<-'Born'
remDr$findElement(using = "id", value = "startpoint")$sendKeysToElement(list(age))
html <- remDr$getPageSource()[[1]]
signals <- read_html(html) %>%
signals <- read_html(html)
require(rvest)
signals <- read_html(html) %>%
signals <- read_html(html)
signals
signals <- read_html(html) %>%
html_nodes("LrzXr kno-fv wHYlTd z8gr9e")
signals
signals <- read_html(html) %>%
html_span("LrzXr kno-fv wHYlTd z8gr9e")
signals <- read_html(html) %>%
html_span("LrzXr kno-fv wHYlTd z8gr9e") %>% html_text()
signals <- read_html(html) %>%
html_nodes("LrzXr kno-fv wHYlTd z8gr9e") %>% html_text()
signals
signals <- read_html(html) %>%
html_nodes(xpath=".//div[contains(., 'Age')") %>% html_text()
signals <- read_html(html) %>%
html_nodes(xpath=".//div[contains(., 'z8gr9e')") %>% html_text()
signals <- read_html(html) %>%
html_node(xpath="//span[contains(text(), 'Born')]/parent::div")%>%
html_text()
signals
url = URLencode(paste0("https://www.google.com/search?q=","So,W"," chess")
)
remDr$navigate(url)
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
x<-rnorm(20,10,3)
x<-round(rnorm(20,15,5))
x
x3<-round(rnorm(20,x+3,5))
x2<-round(rnorm(20,x2+5,5))
x2<-round(rnorm(20,x3+5,5))
y=x1+x2-2*x3
y=x+x2-2*x3
y=x1+x2-x3
y=x+x2-x3
y
data<-cbind(x,x2,x3,y)
View(data)
a=rnorm(12,12,3)
a=round(rnorm(12,12,3))
a
b=round(a+rnorm(12,10,3))
b
c=round(a+rnorm(12,6,2))
a
c
b=round(a+rnorm(12,15,3))
b
y=b+c-2*a
y
dataN<-cbind(a,b,c,y)
View(dataN)
32-13
y=b+c-a
dataN<-cbind(a,b,c,y)
a=round(rnorm(100000,12,3))
c=round(a+rnorm(100000,6,2))
b=round(a+rnorm(100000,15,3))
dataN<-cbind(a,b,c,y)
y=b+c-a
dataN<-cbind(a,b,c,y)
y1=a+c
dataN<-cbind(a,b,c,y,y1)
dataN$Check=ifelse(dataN$y= dataN$y1,1,0)
dataN$Check=ifelse(dataN$y==dataN$y1,1,0)
View(dataN)
dataN$Check= ifelse(dataN$y == dataN$y1, 1, 0)
dataN=as.data.frame(dataN)
dataN$Check= ifelse(dataN$y == dataN$y1, 1, 0)
dataN2=dataN[dataN$Check==1m]
dataN2=dataN[dataN$Check==1,]
View(dataN2)
dataN$Check= ifelse(dataN$y == dataN$b, 1, 0)
dataN$Check= ifelse(dataN$y == dataN$y1, 1, 0)
dataN$Check2= ifelse(dataN$y == dataN$b, 1, 0)
table(dataN$Check2)
dataN3=dataN[dataN$Check2==1,]
View(dataN3)
dataN$Check3= ifelse(dataN$y == dataN$a, 1, 0)
table(dataN$Check3)
dataN$Check3= ifelse(dataN$y == dataN$c, 1, 0)
table(dataN$Check3)
View(dataN2)
View(dataN2)
View(dataN3)
setwd('C:\\Users\\neman\\Downloads') #Working directory
AdamData<-read.csv('Power_IQ_Oz_4_7.5.csv') # reading the data
require(brms) # bayesian linear mixed-effect model
require(brms) # bayesian linear mixed-effect model
require(lme4) # frequentist linear mixed-effect model
FreqModel<-lm(DV~age+sex+IQ+diag+lab, data=AdamData) #All main fixed effects (no
summary(FreqModel)
FreqModel1<-lm(DV~age+sex+IQ+lab, data=AdamData) #All main fixed effects (no
FreqModel2<-lm(DV~age+sex+IQ+lab, data=AdamData) #All main fixed effects (no
FreqModel2<-lm(DV~age+sex+IQ+diag+lab, data=AdamData) #All main fixed effects (no
anova(FreqModel1, FreqModel2)
summary(FreqModel1)
summary(FreqModel2)
Bayesian<-brm(DV~age+sex+IQ+diag+lab, data=AdamData, iter=4000, warmup = 1000, chains=3)
summary(Bayesian)
samples <- posterior_samples(Bayesian, "diag")
?as_draws
samples <-as_draws(Bayesian, variable="diag")
samples <-as_draws(Bayesian, variable="diagASD")
samples <-as_draws(Bayesian)
View(samples)
h<-hypothesis(samples$`1`$b_diagASD,"B_diagASD=0")
h<-hypothesis(samples,"B_diagASD=0")
h<-hypothesis(samples,"b_diagASD=0")
h<-hypothesis(Bayesian,"b_diagASD=0")
h<-hypothesis(Bayesian,"diagASD=0")
print(h)
print(h, digits=4)
anova(FreqModel1, FreqModel2) # Model comparison - does the second model improves (explained
install.packages('yhat')
require(yhat)
effect.size(FreqModel2)
?effect.size
regr(FreqModel2)
install.packages('effectsize')
install.packages("effectsize")
require(effectsize)
library(effectsize)
install.packages('insight')
install.packages("insight")
library(effectsize)
eta_squared(FreqModel2)
table(AdamData$diag)
344+89+543
View(AdamData)
0.3*976
hypothesis
?hypothesis
1261/2464
83.1+80.8
(83.1+80.8)/2
(66.2+67.1)/2
(69+73)/2
2110+14070
16180/22660
78.1+81.4+78+83
320.5/4
(44.2+45.9+35.7+36.3)/4
((44.2+45.9+35.7+36.3)/4)-100
1263/3813
install.packages('reldist')
require(reldist)
?reldist
y1<-rnorm(100, 0, 10)
y2<-rnorm(100, 4, 10)
reldist(y1, y2)
reldist(y1, y2, bar='yes', add=T, ci=T)
dat<-dataframe(x=round(runif(28,30)), y = runif(0, 30))
dat<-dataframe(x=round(runif(28,30)), y = runif(0, 30))
dat<-as.dataframe(x=round(runif(28,30)), y = runif(0, 30))
dat<-data.frame(x=round(runif(28,30)), y = runif(0, 30))
?runif
dat<-data.frame(x=round(runif(100,28,30)), y = runif(100,0, 30))
names(dat)=c('denominator','numerator')
dat$numerator2 = ifelse(dat$denominator == 28, dat$numerator+2, ifelse(dat$denominator == 29, dat$numerator + 1, dat$numerator))
knitr::opts_chunk$set(echo = TRUE)
require(mcp)
require(mgcv)
require(itsadug)
require(loo)
setwd('D:\\Science_220721\\Clanci - in the process\\Chapter_Mario')
load("10bins_synth_01hint.RData")
dat0 = dat[dat$hints==0,]
dat0$Group = as.factor(dat0$Group)
dat0$Bin = as.integer(dat0$Bin)
dat0_1=dat0[dat0$AOI=='Plus',]
dat0_1$ParticipantID=as.factor(dat0_1$ParticipantID)
model_2 = list(Percentage|(1|Group)~1+Bin)
fit_3_all<-mcp(model_2, data=dat0_1, par_x='Bin')
model_2 = list(Percentage+(1|Group)~1+Bin)
fit_3_all<-mcp(model_2, data=dat0_1, par_x='Bin')
model_2 = list(Percentage~1+(1|Group)+Bin)
fit_3_all<-mcp(model_2, data=dat0_1, par_x='Bin')
summary(fit_3_all)
?mcp
model_2 = list(Percentage|Group~1+Bin)
summary(fit_3_all)
fit_3_all<-mcp(model_2, data=dat0_1, par_x='Bin')
require(worldfootballR)
Urls = fb_league_urls(country = 'EN',gender = 'M', season_end_year = 2022, tier ='1st')
Urls = fb_league_urls(country = 'EN',gender = 'M', season_end_year = 2022)
Urls = fb_league_urls(country = 'ENG',gender = 'M', season_end_year = 2022)
Urls = fb_league_urls(country = 'ENG',gender = 'M', season_end_year = 2022, tier='1st')
Adv2022= fb_advanced_match_stats(Urls, stat_type = 'summary',team_or_player = 'team')
Urls
Urls = fb_league_urls(country = 'ENG',gender = 'M', season_end_year = 2021, tier='1st')
Urls
Urls = fb_match_urls(country = 'ENG',gender = 'M', season_end_year = 2022, tier='1st')
Adv2022= fb_advanced_match_stats(Urls, stat_type = 'summary',team_or_player = 'team')
write.table(Adv2022, 'PremierAdvancedStats2020.csv', sep=',')
write.table(Adv2022, 'PremierAdvancedStats2020.txt', sep=',')
Urls = fb_match_urls(country = 'ENG',gender = 'M', season_end_year = 2021, tier='1st')
Adv2021= fb_advanced_match_stats(Urls, stat_type = 'summary',team_or_player = 'team')
write.table(Adv2021, 'PremierAdvancedStats2021.csv', sep=',')
Urls = fb_match_urls(country = 'ENG',gender = 'M', season_end_year = 2020, tier='1st')
Adv2020= fb_advanced_match_stats(Urls, stat_type = 'summary',team_or_player = 'team')
write.table(Adv2020, 'PremierAdvancedStats2020.csv', sep=',')
Urls = fb_match_urls(country = 'ENG',gender = 'M', season_end_year = 2019, tier='1st')
Adv2019= fb_advanced_match_stats(Urls, stat_type = 'summary',team_or_player = 'team')
write.table(Adv2019, 'PremierAdvancedStats2019.csv', sep=',')
setwd('C:\\Users\\neman\\Downloads')
require(xlsx)
dat<-read.xlsx('HA RUGBY.xlsx')
dat<-read.xlsx('HA RUGBY.xlsx', sheet=1)
?read.xlsx
dat<-read.xlsx('HA RUGBY.xlsx', 1)
View(dat)
table(dat$Venue)
table(dat$Covid)
table(dat$Sex)
table(dat$Venue, dat$Covid)
table(dat$Venue, dat$Covid, dat$Sex)
dat2=aggregate(dat$Result, list(dat$Home, dat$Venue, dat$Covid, dat$Sex), sum)
View(dat2)
colnames(dat2)=c('Home','Venue','Covid','Sex','Result')
lm1<-lm(Result~Venue+Covid+Sex, data=dat2)
summary(lm1)
lm1<-lm(Result~Venue*Covid+Sex, data=dat2)
summary(lm1)
lm1<-lm(Result~Venue*Covid*Sex, data=dat2)
summary(lm1)
lm1<-lm(Result~Venue*Sex+Covid, data=dat2)
summary(lm1)
lm1<-lm(Result~Venue+Sex+Covid, data=dat2)
summary(lm1)
table(dat$Home)
t1=table(dat$Home)
setwd('D:\\Science_220721\\Teaching (Sheffield)\\Advanced statistics\\AS_2023\\Week2_alt\\Week2LogisticModel')
basket<-read.table('Basketball.txt', sep='\t', header=T)
install.packages("ggplot2")
library("ggplot2")
library("ggimage")
###Descriptives
##Load table with variable of interest
head(basket[, c(5, 8, 9, 43)])
## Density plot
ggplot(basket, aes(x=OpponentPoints, fill=WINorLOSS)) + geom_density(alpha=.25)
ggplot(basket, aes(x=TeamPoints, fill=WINorLOSS)) + geom_density(alpha=.25)
tapply(basket$TeamPoints, list(basket$WINorLOSS), mean)
tapply(basket$TeamPoints, list(basket$WINorLOSS, basket$Home), mean)
tapply(basket$TeamPoints, list(basket$WINorLOSS, basket$Home), sd)
##Cross Tabs - not followed as data not set up for this(not categorical)
table(basket$Win, basket$TeamPoints)
table(basket$Win)
table(basket$Win, basket$Home)
##data provided as means
datA = aggregate(cbind(basket$TeamPoints, basket$OpponentPoints), list(basket$Win), mean)
names(datA) = c("Win", "Team points mean", "Opponent points mean")
datA
#### Q1 Wins predicted by Team Points
### Descriptive Plot peredictor and outcome
plotTeamPoints<- ggplot(data=basket, mapping=aes(x=TeamPoints, y=Win))
plotTeamPoints + geom_point (alpha=0.3, color ="orange", size=5 )
###Model1
basketWL1 <- glm(Win ~ TeamPoints, data = basket, family = binomial ("logit"))
summary(basketWL1)
###Model1
basketWL1 <- glm(Win ~ 1, data = basket, family = binomial ("logit"))
summary(basketWL1)
###Model1
basketWL1 <- glm(Win ~ TeamPoints + OpponentPoints, data = basket, family = binomial ("logit"))
###Model1
basketWL1 <- glm(Win ~ 1, data = basket, family = binomial ("logit"))
## Exponential of Logistic Odds
exp(basketWL1$coefficients)
###Model1
basketWL1 <- glm(Win ~ 1+Home, data = basket, family = binomial ("logit"))
summary(basketWL1)
###Model1
basketWL0 <- glm(Win ~ 1, data = basket, family = binomial ("logit"))
AIC(basketWL0, basketWL1)
BIC(basketWL0, basketWL1)
anova(basketWL0, basketWL1)
anova(basketWL0, basketWL1, , test = "LR")
anova(basketWL0, basketWL1,test = "LR")
exp(coefficients(basketWL1))
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[2]]*0
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[2]]*0)
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[2]]*1)
###Model1
basketWL1 <- glm(Win ~ 1+X3PointShots, data = basket, family = binomial ("logit"))
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[2]]*1)
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[40]]*1)
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[2]]*40)
arm::invlogit(coef(basketWL1)[[1]]+coef(basketWL1)[[2]]*20)
basket[1,]
basket[1,1]
basket[1,1:3]
basket[1:10,1:3]
confint(baskWL1)
confint(basketWL1)
exp(confint(basketWL1))
basket$prob=predict(basketWl1, type='response')
basket$prob=predict(basketWL1, type='response')
View(basket)
Ctabs <- table(basket$Win, basket$prob > 0.5)
Ctabks
Ctabs
